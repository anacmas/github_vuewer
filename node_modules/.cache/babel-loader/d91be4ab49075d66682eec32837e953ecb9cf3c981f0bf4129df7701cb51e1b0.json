{"ast":null,"code":"import { api } from \"~api\";\nexport default {\n  props: [\"repo\"],\n  data: () => ({\n    content: [],\n    loading: false\n  }),\n  methods: {\n    async listContent() {\n      this.loading = true;\n      const content = await api.listContent(this.repo.owner.login, this.repo.name);\n      console.log(content);\n      this.content = this.content.concat(content);\n      this.loading = false;\n    }\n  },\n  watch: {\n    repo() {\n      this.content = [];\n      this.listContent();\n    }\n  }\n};","map":{"version":3,"mappings":"AAkCA;AAEA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACA;MACA,sCACA,uBACA,eACA;MACAC;MACA;MACA;IACA;EACA;EACAC;IACAC;MACA;MACA;IACA;EACA;AACA","names":["props","data","content","loading","methods","console","watch","repo"],"sourceRoot":"src/components","sources":["GithubIssues.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-simple-table>\n          <template v-slot:default>\n            <thead>\n              <tr>\n                <th class=\"text-left\">Repository</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"bla in content\" :key=\"bla.name\">\n                <td>{{ bla.name }}</td>\n                <td>{{ bla.type }}</td>\n              </tr>\n            </tbody>\n          </template>\n        </v-simple-table>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-progress-circular\n          indeterminate\n          color=\"primary\"\n          v-if=\"loading\"\n        ></v-progress-circular>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport { api } from \"~api\";\n\nexport default {\n  props: [\"repo\"],\n  data: () => ({\n    content: [],\n    loading: false,\n  }),\n  methods: {\n    async listContent() {\n      this.loading = true;\n      const content = await api.listContent(\n        this.repo.owner.login,\n        this.repo.name\n      );\n      console.log(content);\n      this.content = this.content.concat(content);\n      this.loading = false;\n    },\n  },\n  watch: {\n    repo() {\n      this.content = [];\n      this.listContent();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}